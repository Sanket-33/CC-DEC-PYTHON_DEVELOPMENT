# -*- coding: utf-8 -*-
"""URL shortner using Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XlhIfe_sB5IrL3rLJ0-QwFgQBXlyvdX8

Whenever we type or click any link we are actually using URL.
URL stands for (Uniform Resource Locater).
we generally use a link to search for example, https://colab.research.google.com, here each portion of URL has different meanings providing different information.
The very first portion of an URL is Scheme eg., http:// or https:// (for better security only),
next is domain name eg., www.google.com which again consists of subdomain eg. www and top-level domain eg., .com,
the top-level domain can be different, for educational institute it is .ed for goverment it is .gov and for specific country it changes eg., for india .in for france .fr etc.
next it can also have a file path to directly go on subpage,
some URLs consists of parameter string and anchor strings,
parameter string starts with '?' and anchor string starts with "#"
parameter string provides information to load correct page and anchor string provides information to specific part of long page

Bitly API
Bitlinks
Bitlinks are shortened links. They could begin with the bit.ly domain or your own custom branded short domain (BSD).
"""

pip install requests

import requests
username="o_4sdqs7nvtd"
password="Giant@24"

auth_req=requests.post("https://api-ssl.bitly.com/oauth/access_token",auth=(username,password))
if auth_req.status_code==200:
  access_token=auth_req.content.decode()
  print("Got access token!",access_token)
else:
  print("Cannot get access token exiting...")
  exit()

headers = {"Authorization": f"Bearer {access_token}"}
groups_res = requests.get("https://api-ssl.bitly.com/v4/groups", headers=headers)
if groups_res.status_code == 200:
    # if response is OK, get the GUID
    groups_data = groups_res.json()['groups'][0]
    guid = groups_data['guid']
else:
    print("[!] Cannot get GUID, exiting...")
    exit()

#now shortning URL
url="https://www.amazon.in/OnePlus-Truly-Wireless-Bluetooth-Headset/dp/B0BLNR4TBT/ref=sr_1_1?pd_rd_r=336bf1dc-b6c7-4b50-bf19-fb266460947b&pd_rd_w=KHQsh&pd_rd_wg=tdUht&pf_rd_p=7f4a3afe-60dd-4be9-828c-5703b1b1238a&pf_rd_r=T2GFR2AKP3QW4K644D38&qid=1671352856&sr=8-1&th=1"
shorten_res = requests.post("https://api-ssl.bitly.com/v4/shorten", json={"group_guid": guid, "long_url": url}, headers=headers)
if shorten_res.status_code == 200:
    # if response is OK, get the shortened URL
    link = shorten_res.json().get("link")
    print("Shortened URL:", link)

#making a function
def shortningurl(url):
  shorten_res = requests.post("https://api-ssl.bitly.com/v4/shorten", json={"group_guid": guid, "long_url": url}, headers=headers)
  if shorten_res.status_code == 200:
      # if response is OK, get the shortened URL
      link = shorten_res.json().get("link")
      print("Shortened URL:", link)

while True:
  url=input("Enter URL:")
  if url=="":
    print("Exit!")
    break
  shortningurl(url)

